array argv1[7] : w32 -> w8 = symbolic
array argv3[3] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array argv2[2] : w32 -> w8 = symbolic
(query [(Eq 91 (Read w8 0 argv1))
        (Ult (Add w8 158 N0:(Read w8 1 argv1))
             25)
        (Eq 45 (Read w8 2 argv1))
        (Slt 96 N1:(Read w8 3 argv1))
        (Eq 93 (Read w8 4 argv1))
        (Eq 0 (Read w8 5 argv1))
        (Ult (Add w8 208 (Read w8 0 argv2))
             10)
        (Eq 0 (Read w8 1 argv2))
        (Slt 0 N2:(Read w8 0 argv3))
        (Eq 0 (Read w8 1 argv3))
        (Eq false
            (Eq 0
                (And w32 (ZExt w32 (ReadLSB w16 (Add w32 256
                                                         N3:(Mul w32 2 N4:(SExt w32 N1)))
                                                const_arr1))
                         8)))
        (Eq false (Slt N1 N0))
        (Slt (Add w32 1 N5:(SExt w32 N0))
             N4)
        (Slt (Add w32 2 N5) N4)
        (Slt (Add w32 3 N5) N4)
        (Slt (Add w32 4 N5) N4)
        (Slt (Add w32 5 N5) N4)
        (Slt (Add w32 6 N5) N4)
        (Slt (Add w32 7 N5) N4)
        (Slt (Add w32 8 N5) N4)
        (Slt (Add w32 9 N5) N4)
        (Slt (Add w32 10 N5) N4)
        (Slt (Add w32 11 N5) N4)
        (Slt (Add w32 12 N5) N4)
        (Slt (Add w32 13 N5) N4)
        (Slt (Add w32 14 N5) N4)
        (Eq false
            (Slt (Add w32 15 N5) N4))
        (Eq false
            (Eq (Extract w8 0 (Add w32 13
                                       N6:(ZExt w32 (Add w8 1 N0))))
                N2))
        (Eq false
            (Eq (Extract w8 0 (Add w32 12 N6))
                N2))
        (Eq false
            (Eq (Extract w8 0 (Add w32 11 N6))
                N2))
        (Eq false
            (Eq (Extract w8 0 (Add w32 10 N6))
                N2))
        (Eq false
            (Eq (Extract w8 0 (Add w32 9 N6))
                N2))
        (Eq false
            (Eq (Extract w8 0 (Add w32 8 N6))
                N2))]
       false)
