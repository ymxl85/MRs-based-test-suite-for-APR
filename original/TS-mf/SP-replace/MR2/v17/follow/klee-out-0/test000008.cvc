__tmpInt8  : BITVECTOR(8);
__tmpInt16  : BITVECTOR(16);
__tmpInt32  : BITVECTOR(32);
__tmpInt64  : BITVECTOR(64);
argv1_0xa64af88  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
argv2_0xa5beba0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
argv3_0xa6c9940  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1_0xa2874d8  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2_0xa44c088  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4_0xa5b6d88  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( (0x5B = argv1_0xa64af88[0x00000000]
) );
ASSERT( BVLT(BVPLUS(8, 
0xB0, 
argv1_0xa64af88[0x00000001])
,0x0B)
 );
ASSERT( (0x2D = argv1_0xa64af88[0x00000002]
) );
ASSERT( (LET let_k_0 = argv1_0xa64af88[0x00000001] IN 
( NOT( (( NOT( (0x58 = let_k_0
))) AND ( NOT( (0x62 = let_k_0
)))
))))  );
ASSERT( (0x5D = argv1_0xa64af88[0x00000004]
) );
ASSERT( (0x00 = argv1_0xa64af88[0x00000005]
) );
ASSERT( BVLT(BVPLUS(8, 
0x9F, 
argv2_0xa5beba0[0x00000000])
,0x1A)
 );
ASSERT( (0x00 = argv2_0xa5beba0[0x00000001]
) );
ASSERT( SBVLT(0x00,argv3_0xa6c9940[0x00000000])
 );
ASSERT( (0x00 = argv3_0xa6c9940[0x00000001]
) );
ASSERT( (0x5D = argv1_0xa64af88[0x00000003]
) );
ASSERT( (argv1_0xa64af88[0x00000001] = argv3_0xa6c9940[0x00000000]
) );
%----------------------------------------------------
QUERY( FALSE  );
