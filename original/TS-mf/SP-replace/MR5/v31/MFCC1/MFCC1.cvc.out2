__tmpInt8  : BITVECTOR(8);
__tmpInt16  : BITVECTOR(16);
__tmpInt32  : BITVECTOR(32);
__tmpInt64  : BITVECTOR(64);
argv1_0xa34b088  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
argv2_0xa359cb8  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
argv3_0xa34cb88  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVLT(BVPLUS(8,  0xD0,  argv2_0xa359cb8[0x00000000]) ,0x0A)  );
ASSERT( (0x00 = argv2_0xa359cb8[0x00000001] ) );
%----------------------------------------------------
%****************************************************
ASSERT( BVLT(BVPLUS(8,  0xD0,  argv2_0xa359cb8[0x00000000]) ,0x0A)  );
ASSERT( (0x00 = argv2_0xa359cb8[0x00000001] ) );
ASSERT( (0x00 = argv1_0xa34b088[0x00000001] ) );
ASSERT( (0x00 = argv3_0xa34cb88[0x00000002] ) );
%###################################################
ASSERT(NOT (( (0x3F = argv1_0xa34b088[0x00000000] ) )));
%###################################################
ASSERT( (0x0A = argv3_0xa34cb88[0x00000000] ) );
ASSERT( (0x0A = argv3_0xa34cb88[0x00000001] ) );
ASSERT( SBVLT(0x00,argv3_0xa34cb88[0x00000000])  );
ASSERT( ( NOT( (0x24 = argv3_0xa34cb88[0x00000000] ))) );
ASSERT( ( NOT( (0x5B = argv3_0xa34cb88[0x00000000] ))) );
ASSERT( SBVLT(0x00,argv3_0xa34cb88[0x00000001])  );
ASSERT( SBVLT(0x09,argv3_0xa34cb88[0x00000000])  );
ASSERT( SBVLT(0x09,argv3_0xa34cb88[0x00000001])  );
QUERY( FALSE  );
