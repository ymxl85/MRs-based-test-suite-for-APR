int main(int argc,char *argv[])
{  
    char rr[100]="";
    char argv1[15];
    klee_make_symbolic(&argv1,sizeof(argv1),"argv1");

    klee_assume(argv1[0]=='a');
    klee_assume(argv1[1]=='n');
    klee_assume(argv1[2]=='d');    
    klee_assume(argv1[3]=='\n');//first token: keyword
    klee_assume(argv1[4]>='a' & argv1[4]<='z');
    klee_assume((argv1[5]<'0' | argv1[5]>'z') & argv1[5]!=' ' & argv1[5]!='\n' & argv1[5]!='\0');
    klee_assume(argv1[6]>='a' & argv1[6]<='z');
    klee_assume(argv1[7]=='\n');//second token, "c\t c"
    klee_assume(argv1[8]=='"');
    klee_assume(argv1[9]>='a' & argv1[9]<='z');   
    klee_assume(argv1[10]=='\n');//third token, ""c"
    klee_assume(argv1[11]>='0' & argv1[11]<='9');
    klee_assume(argv1[12]>='a' & argv1[12]<='z');
    klee_assume(argv1[13]=='\n');//fourth token, 1c
    klee_assume(argv1[14]=='\0');
////////////////////////////////////////////////////////follw-up
    char f[15];
    klee_make_symbolic(&f,sizeof(argv1),"argv1");
    f[0]=argv1[0];
    f[1]=argv1[1];
    f[2]=argv1[2];
    f[3]='x';
    f[4]='y';
    f[5]=argv1[3];//first token
    f[6]=argv1[4];
    f[7]=argv1[6];
    f[8]=argv1[7];//second token
    f[9]=argv1[9];
    f[10]=argv1[10];//third token
    f[11]=argv1[12];
    f[12]=argv1[13];//fourth token
    f[13]=argv1[14];
    klee_assume(f[0]==argv1[0]);
    klee_assume(f[1]==argv1[1]);
    klee_assume(f[2]==argv1[2]);
    klee_assume(f[3]=='x');
    klee_assume(f[4]=='y');
    klee_assume(f[5]==argv1[3]);
    klee_assume(f[6]==argv1[4]);
    klee_assume(f[7]==argv1[6]);
    klee_assume(f[8]==argv1[7]);
    klee_assume(f[9]==argv1[9]);
    klee_assume(f[10]==argv1[10]);
    klee_assume(f[11]==argv1[12]);
    klee_assume(f[12]==argv1[13]);
    klee_assume(f[13]==argv1[14]);
///////////////////////////////////////////////////////////////
    mainQ(f,rr);
////////////////////////////////////////////////////////
    klee_print_expr("rr=",rr);
   return 0;
}
