array argv1[15] : w32 -> w8 = symbolic
array argv1_1[15] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
(query [(Eq 97 (Read w8 0 argv1))
        (Eq 110 (Read w8 1 argv1))
        (Eq 100 (Read w8 2 argv1))
        (Eq 10 (Read w8 3 argv1))
        (Ult (Add w8 159 (Read w8 4 argv1))
             26)
        (Ult 74
             (Add w8 208 N0:(Read w8 5 argv1)))
        (Eq false (Eq 32 N0))
        (Eq false (Eq 10 N0))
        (Eq false (Eq 0 N0))
        (Ult (Add w8 159 (Read w8 6 argv1))
             26)
        (Eq 10 (Read w8 7 argv1))
        (Eq 34 (Read w8 8 argv1))
        (Ult (Add w8 159 (Read w8 9 argv1))
             26)
        (Eq 10 (Read w8 10 argv1))
        (Ult (Add w8 208 (Read w8 11 argv1))
             10)
        (Ult (Add w8 159 (Read w8 12 argv1))
             26)
        (Eq 10 (Read w8 13 argv1))
        (Eq 0 (Read w8 14 argv1))
        (Eq false
            (Eq 0 (Read w8 14 argv1_1)))
        (Eq false
            (Eq 0 N1:(Read w8 0 argv1_1)))
        (Or (Eq 10 N1) (Eq 32 N1))
        (Eq false
            (Eq 0 N2:(Read w8 1 argv1_1)))
        (Or (Eq 10 N2) (Eq 32 N2))
        (Eq false
            (Eq 0 N3:(Read w8 2 argv1_1)))
        (Or (Eq 10 N3) (Eq 32 N3))
        (Eq false
            (Eq 0 N4:(Read w8 3 argv1_1)))
        (Or (Eq 10 N4) (Eq 32 N4))
        (Eq false (Eq 59 N4))
        (Eq false
            (Eq 0 N5:(Read w8 4 argv1_1)))
        (Eq false (Eq 32 N5))
        (Eq false (Eq 10 N5))
        (Eq 0 (Read w8 6 argv1_1))
        (Eq false
            (Eq 1
                (Select w32 (Eq 59 N5)
                            2
                            (ZExt w32 (Eq 34 N5)))))
        (Eq 0
            (And w32 N6:(ZExt w32 (ReadLSB w16 (Add w32 256
                                                        N7:(Mul w32 2 (SExt w32 N5)))
                                               const_arr1))
                     1024))
        (Eq false
            (Eq 0 (And w32 N6 2048)))]
       false)
