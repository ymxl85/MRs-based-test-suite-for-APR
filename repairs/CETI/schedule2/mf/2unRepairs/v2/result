gcc -D_GNUCC -E -DCIL=1 SH/MFCC/MR3/v2/v2.c -o SH/MFCC/MR3/v2/v2.i
/usr/local/bin/cilly.native --out SH/MFCC/MR3/v2/v2.cil.c --noPrintLn --useLogicalOperators SH/MFCC/MR3/v2/v2.i
gcc -D_GNUCC -E SH/MFCC/MR3/v2/v2.cil.c -o SH/MFCC/MR3/v2/v2.cil.i
gcc -D_GNUCC -c -o SH/MFCC/MR3/v2/v2.o SH/MFCC/MR3/v2/v2.cil.i
SH/MFCC/MR3/v2/v2.cil.c:241: warning: conflicting types for built-in function â€˜exitâ€™
SH/MFCC/MR3/v2/v2.cil.c:252: warning: conflicting types for built-in function â€˜mallocâ€™
SH/MFCC/MR3/v2/v2.cil.c:253: warning: conflicting types for built-in function â€˜freeâ€™
SH/MFCC/MR3/v2/v2.cil.c:350: warning: conflicting types for built-in function â€˜strcatâ€™
gcc -D_GNUCC -E -DCIL=1 SH/MFCC/MR3/v2/processor.c -o SH/MFCC/MR3/v2/processor.i
/usr/local/bin/cilly.native --out SH/MFCC/MR3/v2/processor.cil.c --noPrintLn --useLogicalOperators SH/MFCC/MR3/v2/processor.i
gcc -D_GNUCC -E SH/MFCC/MR3/v2/processor.cil.c -o SH/MFCC/MR3/v2/processor.cil.i
gcc -D_GNUCC -c -o SH/MFCC/MR3/v2/processor.o SH/MFCC/MR3/v2/processor.cil.i
SH/MFCC/MR3/v2/processor.cil.c:6: warning: conflicting types for built-in function â€˜strlenâ€™
gcc -D_GNUCC -o a.out SH/MFCC/MR3/v2/v2.o SH/MFCC/MR3/v2/processor.o
$ cp SH/MFCC/MR3/v2/v2.cil.i /tmp/CETI_39fe47/v2.cil.i
$ cp SH/MFCC/MR3/v2/processor.c /tmp/CETI_39fe47/processor.c
input length='6' output length='6'
*** Get good/bad tcs ***
cmd 'gcc /tmp/CETI_39fe47/v2.cil.i SH/MFCC/MR3/v2/processor.c -o /tmp/CETI_39fe47/v2.cil.i.exe >& /dev/null'
$ gcc /tmp/CETI_39fe47/v2.cil.i SH/MFCC/MR3/v2/processor.c -o /tmp/CETI_39fe47/v2.cil.i.exe >& /dev/null
write_file_str: '/tmp/CETI_39fe47/v2.cil.i.sh'
$ sh /tmp/CETI_39fe47/v2.cil.i.sh /tmp/CETI_39fe47/v2.cil.i.exe &> /dev/null
[35mAlert: 6/6 tests failed. Processing ..
[mwrite_src: '/tmp/CETI_39fe47/v2.cil.i.preproc.c'
*** Fault Localization ***
0. sid 129 in fun 'get_process' (score 0.01)
__cil_tmp14 = *job;
1. sid 128 in fun 'get_process' (score 0.01)
*job = *next;
2. sid 127 in fun 'get_process' (score 0.01)
next = & prio_queue[prio].head;
3. sid 126 in fun 'get_process' (score 0.01)
index = (int )(ratio * (float )length);
4. sid 125 in fun 'get_process' (score 0.01)
length = prio_queue[prio].length;
5. sid 124 in fun 'get_process' (score 0.01)
__cil_tmp13 = (double )ratio < 0.0 || (double )ratio > 1.0;
6. sid 123 in fun 'get_process' (score 0.01)
__cil_tmp12 = prio > 3 || prio < 0;
7. sid 122 in fun 'get_process' (score 0.01)
__cil_tmp11 = 0;
8. sid 121 in fun 'get_process' (score 0.01)
__cil_tmp10 = 1;
9. sid 120 in fun 'get_process' (score 0.01)
(prio_queue[prio].length) --;
10. sid 119 in fun 'get_process' (score 0.01)
(*job)->next = (struct process *)0;
11. sid 118 in fun 'get_process' (score 0.01)
*next = (*next)->next;
12. sid 117 in fun 'get_process' (score 0.01)
index --;
13. sid 116 in fun 'get_process' (score 0.01)
next = & (*next)->next;
14. sid 115 in fun 'get_process' (score 0.01)
__cil_tmp9 = index && *next;
15. sid 114 in fun 'get_process' (score 0.01)
__cil_tmp8 = -5;
16. sid 113 in fun 'get_process' (score 0.01)
__cil_tmp7 = -4;
17. sid 112 in fun 'put_end' (score 0.01)
__cil_tmp7 = 0;
18. sid 111 in fun 'put_end' (score 0.01)
(prio_queue[prio].length) ++;
19. sid 110 in fun 'put_end' (score 0.01)
*next = process;
20. sid 109 in fun 'put_end' (score 0.01)
next = & prio_queue[prio].head;
21. sid 108 in fun 'put_end' (score 0.01)
__cil_tmp6 = prio > 3 || prio < 0;
22. sid 107 in fun 'put_end' (score 0.01)
next = & (*next)->next;
23. sid 106 in fun 'put_end' (score 0.01)
__cil_tmp5 = *next;
24. sid 105 in fun 'put_end' (score 0.01)
__cil_tmp4 = -4;
25. sid 104 in fun 'schedule' (score 0.01)
__cil_tmp6 = status;
26. sid 103 in fun 'schedule' (score 0.01)
status = 0;
27. sid 102 in fun 'schedule' (score 0.01)
default: 
status = -6;
28. sid 101 in fun 'reschedule' (score 0.01)
__cil_tmp3 = 0;
29. sid 100 in fun 'reschedule' (score 0.01)
__cil_tmp2 = current_job && prio > current_job->priority;
30. sid 99 in fun 'reschedule' (score 0.01)
current_job = (struct process *)0;
31. sid 98 in fun 'get_current' (score 0.01)
__cil_tmp6 = current_job;
32. sid 97 in fun 'get_current' (score 0.01)
__cil_tmp5 = ! current_job;
33. sid 96 in fun 'get_current' (score 0.01)
prio = 3;
34. sid 95 in fun 'get_current' (score 0.01)
prio --;
35. sid 94 in fun 'get_current' (score 0.01)
__cil_tmp4 = tmp > 0;
36. sid 93 in fun 'get_current' (score 0.01)
__cil_tmp3 = prio > 0;
37. sid 92 in fun 'flush' (score 0.01)
__cil_tmp4 = 0;
38. sid 91 in fun 'flush' (score 0.01)
__cil_tmp3 = tmp;
39. sid 90 in fun 'finish' (score 0.01)
__cil_tmp8 = job;
40. sid 89 in fun 'finish' (score 0.01)
tmp = 1U;
41. sid 88 in fun 'finish' (score 0.01)
s[0] = (char )'\000';
42. sid 87 in fun 'finish' (score 0.01)
__cil_tmp7 = 1;
43. sid 86 in fun 'finish' (score 0.01)
__cil_tmp6 = 0;
44. sid 85 in fun 'finish' (score 0.01)
current_job = (struct process *)0;
45. sid 84 in fun 'finish' (score 0.01)
tmp ++;
46. sid 83 in fun 'finish' (score 0.01)
s[tmp] = (char)0;
47. sid 82 in fun 'finish' (score 0.01)
__cil_tmp5 = ! (tmp >= 10U);
48. sid 81 in fun 'quantum_expire' (score 0.01)
__cil_tmp5 = 0;
49. sid 80 in fun 'quantum_expire' (score 0.01)
__cil_tmp4 = job;
50. sid 79 in fun 'quantum_expire' (score 0.01)
__cil_tmp3 = tmp;
51. sid 78 in fun 'quantum_expire' (score 0.01)
current_job = (struct process *)0;
52. sid 77 in fun 'unblock' (score 0.01)
__cil_tmp7 = tmp;
53. sid 76 in fun 'unblock' (score 0.01)
__cil_tmp6 = status <= 0;
54. sid 75 in fun 'unblock' (score 0.01)
__cil_tmp5 = status;
55. sid 74 in fun 'block' (score 0.01)
__cil_tmp5 = 0;
56. sid 73 in fun 'block' (score 0.01)
__cil_tmp4 = job;
57. sid 72 in fun 'block' (score 0.01)
__cil_tmp3 = tmp;
58. sid 71 in fun 'block' (score 0.01)
current_job = (struct process *)0;
59. sid 70 in fun 'upgrade_prio' (score 0.01)
__cil_tmp10 = tmp;
60. sid 69 in fun 'upgrade_prio' (score 0.01)
job->priority = prio + 1;
61. sid 68 in fun 'upgrade_prio' (score 0.01)
__cil_tmp9 = status <= 0;
62. sid 67 in fun 'upgrade_prio' (score 0.01)
__cil_tmp8 = prio < 1 || prio > 2;
63. sid 66 in fun 'upgrade_prio' (score 0.01)
__cil_tmp7 = status;
64. sid 65 in fun 'upgrade_prio' (score 0.01)
__cil_tmp6 = -4;
65. sid 64 in fun 'new_job' (score 0.01)
__cil_tmp10 = status;
66. sid 63 in fun 'new_job' (score 0.01)
__cil_tmp9 = status;
67. sid 62 in fun 'new_job' (score 0.01)
__cil_tmp8 = ! new_process;
68. sid 61 in fun 'new_job' (score 0.01)
new_process = (struct process *)tmp___0;
69. sid 60 in fun 'new_job' (score 0.01)
pid = tmp;
70. sid 59 in fun 'new_job' (score 0.01)
next_pid ++;
71. sid 58 in fun 'new_job' (score 0.01)
tmp = next_pid;
72. sid 57 in fun 'new_job' (score 0.01)
status = 0;
73. sid 56 in fun 'new_job' (score 0.01)
next_pid --;
74. sid 55 in fun 'new_job' (score 0.01)
__cil_tmp7 = status;
75. sid 54 in fun 'new_job' (score 0.01)
new_process->next = (struct process *)0;
76. sid 53 in fun 'new_job' (score 0.01)
new_process->priority = prio;
77. sid 52 in fun 'new_job' (score 0.01)
new_process->pid = (unsigned int )pid;
78. sid 51 in fun 'new_job' (score 0.01)
status = -3;
79. sid 50 in fun 'get_command' (score 0.01)
__cil_tmp17 = (int )*(argv + *pos) != 0;
80. sid 49 in fun 'get_command' (score 0.01)
tmp = 1U;
81. sid 48 in fun 'get_command' (score 0.01)
value[0] = (char )'\000';
82. sid 47 in fun 'get_command' (score 0.01)
status = 0;
83. sid 46 in fun 'get_command' (score 0.01)
__cil_tmp16 = 0;
84. sid 45 in fun 'get_command' (score 0.01)
__cil_tmp15 = 1;
85. sid 44 in fun 'get_command' (score 0.01)
__cil_tmp14 = (int )*(argv + *pos) == 10;
86. sid 43 in fun 'get_command' (score 0.01)
*ratio = (float )(- 1.0);
87. sid 42 in fun 'get_command' (score 0.01)
*prio = tmp___0;
88. sid 41 in fun 'get_command' (score 0.01)
*command = tmp___0;
89. sid 40 in fun 'get_command' (score 0.01)
tmp___0 = -1;
90. sid 39 in fun 'get_command' (score 0.01)
(*pos) ++;
91. sid 38 in fun 'get_command' (score 0.01)
(*pos) ++;
92. sid 37 in fun 'get_command' (score 0.01)
__cil_tmp13 = (int )*(argv + *pos) != 0 && (int )*(argv + *pos) != 10;
93. sid 36 in fun 'get_command' (score 0.01)
*ratio = tmp___2;
94. sid 35 in fun 'get_command' (score 0.01)
*ratio = tmp___1;
95. sid 34 in fun 'get_command' (score 0.01)
tmp ++;
96. sid 33 in fun 'get_command' (score 0.01)
value[tmp] = (char)0;
97. sid 32 in fun 'get_command' (score 0.01)
__cil_tmp12 = ! (tmp >= 10U);
98. sid 31 in fun 'mainQ' (score 0.01)
__cil_tmp26 = status < 0;
99. sid 30 in fun 'mainQ' (score 0.01)
__cil_tmp25 = r;
100. sid 29 in fun 'mainQ' (score 0.01)
__cil_tmp24 = (int )*(argv + pos) == 10;
101. sid 28 in fun 'mainQ' (score 0.01)
__cil_tmp23 = a1 < 0;
102. sid 27 in fun 'mainQ' (score 0.01)
prio = 1;
103. sid 26 in fun 'mainQ' (score 0.01)
__cil_tmp22 = a2 < 0;
104. sid 25 in fun 'mainQ' (score 0.01)
prio = 2;
105. sid 24 in fun 'mainQ' (score 0.01)
__cil_tmp21 = a3 < 0;
106. sid 23 in fun 'mainQ' (score 0.01)
prio = 3;
107. sid 22 in fun 'mainQ' (score 0.01)
pos = 0;
108. sid 21 in fun 'mainQ' (score 0.01)
tmp = 1U;
109. sid 20 in fun 'mainQ' (score 0.01)
value[0] = (char )'\000';
110. sid 19 in fun 'mainQ' (score 0.01)
__cil_tmp20 = ! (status > 0);
111. sid 18 in fun 'mainQ' (score 0.01)
pos ++;
112. sid 17 in fun 'mainQ' (score 0.01)
pos ++;
113. sid 16 in fun 'mainQ' (score 0.01)
__cil_tmp19 = (int )*(argv + pos) != 0 && (int )*(argv + pos) != 10;
114. sid 15 in fun 'mainQ' (score 0.01)
a1 --;
115. sid 14 in fun 'mainQ' (score 0.01)
__cil_tmp18 = status;
116. sid 13 in fun 'mainQ' (score 0.01)
__cil_tmp17 = a1 > 0;
117. sid 12 in fun 'mainQ' (score 0.01)
a2 --;
118. sid 11 in fun 'mainQ' (score 0.01)
__cil_tmp16 = status;
119. sid 10 in fun 'mainQ' (score 0.01)
__cil_tmp15 = a2 > 0;
120. sid 9 in fun 'mainQ' (score 0.01)
a3 --;
121. sid 8 in fun 'mainQ' (score 0.01)
__cil_tmp14 = status;
122. sid 7 in fun 'mainQ' (score 0.01)
__cil_tmp13 = a3 > 0;
123. sid 6 in fun 'mainQ' (score 0.01)
tmp ++;
124. sid 5 in fun 'mainQ' (score 0.01)
value[tmp] = (char)0;
125. sid 4 in fun 'mainQ' (score 0.01)
__cil_tmp12 = ! (tmp >= 10U);
126. sid 3 in fun 'enqueue' (score 0.01)
__cil_tmp7 = tmp;
127. sid 2 in fun 'enqueue' (score 0.01)
__cil_tmp6 = status;
128. sid 1 in fun 'enqueue' (score 0.01)
__cil_tmp5 = status;
[35mAlert: FL: found 129 stmts with sscores >= 0.01
[m[35mAlert: Perform ** BugFix **
[mwrite_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s129.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s128.t1.arr'
[35mAlert: CONSTS: don't know how to deal with exp '& prio_queue[prio].head' (sid 127)
[m[35mAlert: OPS_PR: don't know how to deal with exp '& prio_queue[prio].head' (sid 127)
[mwrite_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s127.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s126.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s125.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s124.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s123.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s122.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s121.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s120.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s119.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s118.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s117.t1.arr'
[35mAlert: CONSTS: don't know how to deal with exp '& (*next)->next' (sid 116)
[m[35mAlert: OPS_PR: don't know how to deal with exp '& (*next)->next' (sid 116)
[mwrite_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s116.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s115.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s114.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s113.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s112.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s111.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s110.t1.arr'
[35mAlert: CONSTS: don't know how to deal with exp '& prio_queue[prio].head' (sid 109)
[m[35mAlert: OPS_PR: don't know how to deal with exp '& prio_queue[prio].head' (sid 109)
[mwrite_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s109.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s108.t1.arr'
[35mAlert: CONSTS: don't know how to deal with exp '& (*next)->next' (sid 107)
[m[35mAlert: OPS_PR: don't know how to deal with exp '& (*next)->next' (sid 107)
[mwrite_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s107.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s106.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s105.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s104.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s103.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s102.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s101.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s100.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s99.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s98.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s97.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s96.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s95.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s94.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s93.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s92.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s91.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s90.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s89.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s88.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s87.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s86.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s85.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s84.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s83.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s82.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s81.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s80.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s79.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s78.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s77.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s76.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s75.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s74.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s73.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s72.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s71.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s70.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s69.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s68.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s67.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s66.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s65.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s64.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s63.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s62.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s61.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s60.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s59.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s58.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s57.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s56.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s55.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s54.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s53.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s52.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s51.t1.arr'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.s50.t1.arr'
[35mAlert: Spy: Got 145 info from 80 sids
[minput length='6' output length='6'
write_file_bin: '/tmp/CETI_39fe47/v2.cil.i.info'
$ python kl.py /tmp/CETI_39fe47/v2.cil.i SH/MFCC/MR3/v2/processor.c --do_tb "(129, 1, 4, 5); (128, 1, 4, 5); (127, 1, 4, 5); (126, 1, 4, 5); (125, 1, 4, 5); (124, 3, 1, 2); (124, 7, 2, 3); (124, 1, 4, 5); (123, 3, 1, 2); (123, 7, 2, 3); (123, 1, 4, 5); (122, 3, 1, 1); (122, 1, 4, 5); (121, 3, 1, 1); (121, 1, 4, 5); (120, 3, 1, 1); (120, 7, 2, 1); (120, 1, 4, 5); (119, 3, 1, 1); (119, 1, 4, 5); (118, 1, 4, 5); (117, 3, 1, 1); (117, 7, 2, 1); (117, 1, 4, 5); (116, 1, 4, 5); (115, 7, 2, 1); (115, 1, 4, 5); (114, 3, 1, 1); (114, 1, 4, 5); (113, 3, 1, 1); (113, 1, 4, 5); (112, 3, 1, 1); (112, 1, 4, 2); (111, 3, 1, 1); (111, 7, 2, 1); (111, 1, 4, 2); (110, 1, 4, 2); (109, 1, 4, 2); (108, 3, 1, 2); (108, 7, 2, 3); (108, 1, 4, 2); (107, 1, 4, 2); (106, 1, 4, 2); (105, 3, 1, 1); (105, 1, 4, 2); (104, 1, 4, 5); (103, 3, 1, 1); (103, 1, 4, 5); (102, 3, 1, 1); (102, 1, 4, 5); (101, 3, 1, 1); (101, 1, 4, 2); (100, 7, 2, 2); (100, 1, 4, 2); (99, 3, 1, 1); (99, 1, 4, 2); (98, 1, 4, 3); (97, 1, 4, 3); (96, 3, 1, 1); (96, 1, 4, 3); (95, 3, 1, 1); (95, 7, 2, 1); (95, 1, 4, 3); (94, 3, 1, 1); (94, 7, 2, 1); (94, 1, 4, 3); (93, 3, 1, 1); (93, 7, 2, 1); (93, 1, 4, 3); (92, 3, 1, 1); (92, 1, 4, 2); (91, 1, 4, 2); (90, 1, 4, 2); (89, 3, 1, 1); (89, 1, 4, 2); (88, 3, 1, 1); (88, 1, 4, 2); (87, 3, 1, 1); (87, 1, 4, 2); (86, 3, 1, 1); (86, 1, 4, 2); (85, 3, 1, 1); (85, 1, 4, 2); (84, 3, 1, 1); (84, 7, 2, 1); (84, 1, 4, 2); (83, 3, 1, 1); (83, 1, 4, 2); (82, 3, 1, 1); (82, 7, 2, 1); (82, 1, 4, 2); (81, 3, 1, 1); (81, 1, 4, 2); (80, 1, 4, 2); (79, 1, 4, 2); (78, 3, 1, 1); (78, 1, 4, 2); (77, 1, 4, 4); (76, 3, 1, 1); (76, 7, 2, 1); (76, 1, 4, 4); (75, 1, 4, 4); (74, 3, 1, 1); (74, 1, 4, 2); (73, 1, 4, 2); (72, 1, 4, 2); (71, 3, 1, 1); (71, 1, 4, 2); (70, 1, 4, 5); (69, 3, 1, 1); (69, 7, 2, 1); (69, 1, 4, 5); (68, 3, 1, 1); (68, 7, 2, 1); (68, 1, 4, 5); (67, 3, 1, 2); (67, 7, 2, 3); (67, 1, 4, 5); (66, 1, 4, 5); (65, 3, 1, 1); (65, 1, 4, 5); (64, 1, 4, 5); (63, 1, 4, 5); (62, 1, 4, 5); (61, 1, 4, 5); (60, 1, 4, 5); (59, 3, 1, 1); (59, 7, 2, 1); (59, 1, 4, 5); (58, 1, 4, 5); (57, 3, 1, 1); (57, 1, 4, 5); (56, 3, 1, 1); (56, 7, 2, 1); (56, 1, 4, 5); (55, 1, 4, 5); (54, 3, 1, 1); (54, 1, 4, 5); (53, 1, 4, 5); (52, 1, 4, 5); (51, 3, 1, 1); (51, 1, 4, 5); (50, 3, 1, 1); (50, 7, 2, 1); (50, 1, 4, 3)" --no_parallel
KR: tasks 916
